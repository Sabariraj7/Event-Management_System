package com.eventmangementsystem.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import com.eventmangementsystem.entity.Booking;
import com.eventmangementsystem.entity.BookingDTO;
import com.eventmangementsystem.service.BookingService;

import java.util.List;

@RestController
@RequestMapping("/booking")
public class BookingController {

    @Autowired
    private BookingService bookingService;

    @GetMapping("/all")
    public ResponseEntity<List<Booking>> getAllBookings() {
        try {
            List<Booking> bookings = bookingService.getAllBookings();
            return new ResponseEntity<>(bookings, HttpStatus.OK);
        } catch (Exception e) {
            return new ResponseEntity<>(null, HttpStatus.INTERNAL_SERVER_ERROR);
        }
    }

    @GetMapping("/{bookingId}")
    public ResponseEntity<Booking> getBooking(@PathVariable int bookingId) {
        try {
            Booking booking = bookingService.getBooking(bookingId);
            if (booking == null) {
                return new ResponseEntity<>(HttpStatus.NOT_FOUND);
            }
            return new ResponseEntity<>(booking, HttpStatus.OK);
        } catch (Exception e) {
            return new ResponseEntity<>(null, HttpStatus.INTERNAL_SERVER_ERROR);
        }
    }

    @PostMapping("/add")
    public ResponseEntity<String> createBooking(@RequestBody BookingDTO booking) {
        try {
            bookingService.createBooking(booking);
            return new ResponseEntity<>("Booking created successfully", HttpStatus.CREATED);
        } catch (Exception e) {
            return new ResponseEntity<>("Error creating booking: " + e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);
        }
    }

    @PutMapping("/update/{bookingId}")
    public ResponseEntity<Booking> updateBooking(@PathVariable int bookingId, @RequestBody Booking booking) {
        try {
            Booking updatedBooking = bookingService.updateBooking(bookingId, booking);
            if (updatedBooking == null) {
                return new ResponseEntity<>(HttpStatus.NOT_FOUND);
            }
            return new ResponseEntity<>(updatedBooking, HttpStatus.OK);
        } catch (Exception e) {
            return new ResponseEntity<>(null, HttpStatus.INTERNAL_SERVER_ERROR);
        }
    }

    @DeleteMapping("/delete/{bookingId}")
    public ResponseEntity<String> removeBooking(@PathVariable int bookingId) {
        try {
            bookingService.removeBooking(bookingId);
            return new ResponseEntity<>("Booking deleted successfully", HttpStatus.OK);
        } catch (Exception e) {
            return new ResponseEntity<>("Error deleting booking: " + e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);
        }
    }
}



//package com.eventmangementsystem.controller;
//
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.http.HttpStatus;
//import org.springframework.web.bind.annotation.*;
//
//import com.eventmangementsystem.entity.Booking;
//import com.eventmangementsystem.entity.BookingDTO;
//import com.eventmangementsystem.service.BookingService;
//
//import java.util.List;
//
//@RestController
//@RequestMapping("/booking")
//public class BookingController {
//
//    @Autowired
//    private BookingService bookingService;
//
//    // Retrieve all bookings
//    @GetMapping("/all")
//    public List<Booking> getAllBookings() {
//        return bookingService.getAllBookings();
//    }
//
//    // Retrieve a booking by ID
//    @GetMapping("/{bookingId}")
//    public Booking getBooking(@PathVariable int bookingId) {
//        return bookingService.getBooking(bookingId);
//    }
//
//    // Create a new booking
//    @PostMapping("/add")
//    @ResponseStatus(code = HttpStatus.CREATED)
//    public void createBooking(@RequestBody BookingDTO booking) {
//        bookingService.createBooking(booking);
//    }
//
//    // Update an existing booking
//    @PutMapping("/update/{bookingId}")
//    public Booking updateBooking(@PathVariable int bookingId, @RequestBody Booking booking) {
//        return bookingService.updateBooking(bookingId, booking);
//    }
//
//    // Remove a booking
//    @DeleteMapping("/delete/{bookingId}")
//    public void removeBooking(@PathVariable int bookingId) {
//        bookingService.removeBooking(bookingId);
//    }
//}