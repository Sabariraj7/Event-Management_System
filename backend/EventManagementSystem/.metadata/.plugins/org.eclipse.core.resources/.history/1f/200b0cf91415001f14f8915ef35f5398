package com.eventmangementsystem.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.*;

import com.eventmangementsystem.entity.Booking;
import com.eventmangementsystem.entity.BookingDTO;
import com.eventmangementsystem.entity.Event;
import com.eventmangementsystem.service.BookingService;
import com.eventmangementsystem.service.EventService;

import java.util.List;

@RestController
@RequestMapping("/booking")
public class BookingController {

    @Autowired
    private BookingService bookingService;
    @Autowired
    private EventService eventService;

    @GetMapping("/all")
    public List<Booking> getAllBookings() { 
    	
        return bookingService.getAllBookings();
    }

    @GetMapping("/{bookingId}")
    public Booking getBooking(@PathVariable int bookingId) {
    	
    	
        return bookingService.getBooking(bookingId);
    }

//    @PostMapping("/add")
//    @ResponseStatus(code = HttpStatus.CREATED)
//    public void createBooking(@RequestBody Booking booking) {
//    	System.out.print(booking);
//        bookingService.createBooking(booking);
//    }
    @PostMapping("/add")
    @ResponseStatus(code = HttpStatus.CREATED)
    public void createBooking(@RequestBody BookingDTO bookingDTO) {
        // Fetch event from EventService using eventId from bookingDTO
        Event event = EventService.getEventById(bookingDTO.getEventId());

        // Create Booking object and set necessary fields
        Booking booking = new Booking();
        booking.setEvent(event);
        booking.setEventName(event.getName()); // Assuming you want to store eventName as well
        booking.setCustomername(bookingDTO.getCustomerName());
        booking.setCustomernumber(bookingDTO.getCustomerNumber());
        booking.setNumberoftickets(bookingDTO.getNumberOfTickets());
        booking.setBookingstatus(bookingDTO.isBookingStatus());
        booking.setRole(bookingDTO.getRole());

        // Save the booking
        bookingService.createBooking(booking);
    }

    @PutMapping("/update/{bookingId}")
    public Booking updateBooking(@PathVariable int bookingId, @RequestBody Booking booking) {
        return bookingService.updateBooking(bookingId, booking);
    }

    @DeleteMapping("/delete/{bookingId}")
    public void removeBooking(@PathVariable int bookingId) {
        bookingService.removeBooking(bookingId);
    }
}
